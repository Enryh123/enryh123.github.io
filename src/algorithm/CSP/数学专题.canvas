{
	"nodes":[
		{"id":"73c052ad6b7d3fbb","type":"text","text":"#### 余数和商的应用\n```cpp\nint flip(int n)\n{\n    int ans = 0;\n    while (n)\n    {\n        ans = ans * 10 + n % 10;// 取个位\n        n /= 10; // 缩小10倍\n    }\n    return ans;\n}\n```","x":420,"y":1140,"width":500,"height":400},
		{"id":"b8714276e53bafca","type":"text","text":"#### 最大公约数gcd和最小公倍数lcd\n```cpp\nlong long gcd(long long a, long long b){\n  return b==0? a: gcd(b, a%b);\n}\n```\n\n$$gcd(x, x)=x, gcd(x, x+1)=1$$\n$$lcd(a, b)*gcd(a, b)=a*b$$\n$$lcd(a, b)=\\frac{a}{gcd(a, b)}*b$$\n$$gcd(a,b,c) = gcd(gcd(a,b),c)$$\n如果 $gcd(a, b)=1$，说明 $a,b$ 互质","x":420,"y":630,"width":520,"height":430},
		{"id":"567387d671d8a7dd","type":"text","text":"##### [P8443 gcd.](https://www.luogu.com.cn/problem/P8443)\n1. 注意数据范围：`long long`\n","x":1223,"y":980,"width":360,"height":100},
		{"id":"5ed1915c0fc4bbab","type":"text","text":"#### [P2118 [NOIP2014 普及组] 比例简化](https://www.luogu.com.cn/problem/P2118 \"[NOIP2014 普及组] 比例简化\")\n**限制条件**\n1.  $A'$ 和 $B'$ 均不大于 $L$ （确定范围）\n2.  $A'$ 和 $B'$ 互质（两个整数的最大公约数是 $1$）\n3. $\\dfrac{A'}{B'} \\ge  \\dfrac{A}{B}$ => `A'B >= AB'`\n4. $\\dfrac{A'}{B'} - \\dfrac{A}{B}$ 的值尽可能小。（$\\dfrac{A'}{B'}$求最小值）\n> 求最小值的标准程序\n> `if(minn>x) minn = x`\n> $\\dfrac{minA}{minB} > \\dfrac{A'}{B'}$  => $minAB' > A'minB$\n> `if(minA*B' >= A'*minB){ minA=A'; minB=B';}`\n\n**步骤**\n1. 枚举 `A'` ，范围 `1~L`\n\t1. 枚举 `B'` ，范围 `1~L`\n\t\t1. 验证上面的限制条件\n\t\t2. 条件成立，就保存`minA`, `minB` ","x":1880,"y":200,"width":560,"height":660},
		{"id":"77b79af9576722d4","type":"text","text":"#### [P1029 [NOIP2001 普及组] 最大公约数和最小公倍数问题](https://www.luogu.com.cn/problem/P1029 \"[NOIP2001 普及组] 最大公约数和最小公倍数问题\")\n**限制条件**\n1. `gcd(P,Q)=x`, `lcd(P,Q)=y`\n2. 确定 `P`, `Q` 范围：$x<=P,Q<=y$\n3. `gcd(P,Q)*lcd(P,Q)=P*Q`\n\n**优化**\n1. 根据数据范围 $O(n^2)$ 是超时的，所以只能枚举PQ中的一个\n2. 另一个通过 `x*y/P` ，时间复杂度 $O(n)$\n\n**步骤**\n1. 枚举 `P`, 范围 `x~y`\n\t1. 计算 `Q`, 如果 `P`,`Q` 满足限制条件 `cnt++` ","x":1060,"y":340,"width":669,"height":480},
		{"id":"c22eaaf21c2a5990","type":"text","text":"#### [P7909 [CSP-J 2021] 分糖果](https://www.luogu.com.cn/problem/P7909 \"[CSP-J 2021] 分糖果\")\nL~R 之间，L/n~R/n 之间余数和商的关系\n1. `L~R` 代表是可以拿走的糖果范围\n2. 我拿的糖果的平均分剩下的糖果：`余数`\n3. `余数 = L%n~R%n`，范围 `0~n-1`\n\t1 ~ 9 和 3 的商和余数\n\t 商：0 0 1 1 1 2 2 2 3\n\t 余：1 2 0 1 2 0 1 2 0...\n\t 当余数开始归0时，商会增加1\n\t L/n  == R/n, 说明余数再同一周期内\n\t max = R%n\n\t 否则说明跨周期：max=n-1","x":1868,"y":920,"width":452,"height":420},
		{"id":"6df8fcbedae8891d","type":"text","text":"#### [P9748 [CSP-J 2023] 小苹果](https://www.luogu.com.cn/problem/P9748 \"[CSP-J 2023] 小苹果\")\n分组看苹果，找商和余数的含义\n1. 三个为一组，能分几组就代表拿几个苹果\n2. 三个为一组，恰好剩一个，余数为1，则最后一个苹果一定被拿走\n\n","x":2360,"y":1237,"width":400,"height":256},
		{"id":"1ca1bb799c4b09b6","type":"text","text":"#### [P1887 乘积最大3](https://www.luogu.com.cn/problem/P1887 \"乘积最大3\")\nn=18, k=4 代表：18拆成4个数相加，确保4个数的乘积最大\n乘积越大，要保证数越接近\n策略： 平均分，18平均分成4份\n18/4=4.....2\n4:商         2:余数r\n4 4      5 5\n2个4：k-r个， 输出 k-r个商\n2个4+1:  余数是2，输出r个商+1","x":1660,"y":1424,"width":530,"height":350},
		{"id":"87578c2a3ade4ce9","type":"text","text":"#### [P7257 [COCI2009-2010#3] FILIP](https://www.luogu.com.cn/problem/P7257 \"[COCI2009-2010#3] FILIP\")\n`max(flip(a), flip(b))`","x":1094,"y":1237,"width":440,"height":118},
		{"id":"b08ff9fd6df13109","type":"text","text":"#### [P1150 Peter 的烟](https://www.luogu.com.cn/problem/P1150 \"Peter 的烟\")\n注意剩下来的部分","x":1060,"y":1424,"width":474,"height":116},
		{"id":"c174e9a56f86476f","type":"text","text":"#### [P9585 MXOI Round 2 酒店](https://www.luogu.com.cn/problem/P9585 \"「MXOI Round 2」酒店\")\n1. $2n<=m$ 客人和空房间恰好能隔开\n2. $m=n+1$ 只有1间空房\n3. 其他情况，考虑空房如何安排，空房对愤怒值的贡献是多少？","x":520,"y":1599,"width":616,"height":195},
		{"id":"de59b4b34b16d6d1","type":"text","text":"#### [P2705 小球](https://www.luogu.com.cn/problem/P2705 \"小球\")\n1. 比较 C+D 相同放，和 E+E 反着放的得分大小（拿1次C的分，必定会导致蓝色球也是相同放，拿D的分）\n2. 如果C+D要大，全部相同放，R个球全得C分，B个球全得D分\n3. 如果E+E要大\n\t1. 如果R更大：拿B个 $2*E$ 分，R-B个拿C分\n\t2. 如果B更大：拿R个 $2*E$ 分，B-R个拿D分","x":1347,"y":1794,"width":627,"height":260},
		{"id":"0b7ed08c8ba1b3ce","type":"text","text":"#### 约数\n**约数个数定理**用于计算一个正整数 $n$ 的所有正因数（约数）的个数。其公式与 $n$ 的质因数分解相关。假设 $n$ 的质因数分解为：$$n = p_1^{e_1} \\times p_2^{e_2} \\times \\cdots \\times p_k^{e_k}$$\n\n其中，$p_1, p_2, ..., p_k$ 是 $n$ 的不同质因数，$e_1, e_2, ..., e_k$ 是这些质因数对应的指数。则 $n$ 的约数个数 $d(n)$ 可以通过以下公式计算：\n$$d(n) = (e_1 + 1) \\times (e_2 + 1) \\times \\cdots \\times (e_k + 1)$$\n**示例：**\n假设 $n = 12$，其质因数分解为 $12 = 2^2 \\times 3^1$。\n\n**约数个数**：\n$$d(12) = (2+1) \\times (1+1) = 3 \\times 2 = 6$$\n所以 12 有 6 个约数：1, 2, 3, 4, 6, 12。\n\n**约数之和：**\n$$S(12) = \\left( \\frac{2^{2+1} - 1}{2 - 1} \\right) \\times \\left( \\frac{3^{1+1} - 1}{3 - 1} \\right)\n= \\left( \\frac{2^3 - 1}{1} \\right) \\times \\left( \\frac{3^2 - 1}{2} \\right)\n= 7 \\times 4 = 28$$\n","x":220,"y":-110,"width":720,"height":640},
		{"id":"21e223f0eae5e2c6","type":"text","text":"#### P1876 开灯\n**n以内的完全平方数：**\n```cpp title:n以内的完全平方数\nfor (int i = 1; i * i <= n; i++)\n        cout << i * i << \" \";\n```","x":1534,"y":-160,"width":480,"height":240},
		{"id":"31e645737466da4d","type":"text","text":"#### [P2669 [NOIP2015 普及组] 金币](https://www.luogu.com.cn/problem/P2669 \"[NOIP2015 普及组] 金币\")\n**平方和**\n$$\\frac{n(n + 1)(2n + 1)}{6}$$\n","x":1565,"y":-400,"width":418,"height":181},
		{"id":"261d55e19e7bbd7f","type":"text","text":"#### [# P8814 [CSP-J 2022] 解密](https://www.luogu.com.cn/problem/P8814)\n##### 思路\n $n_i = p_i \\times q_i$、  $e_i \\times d_i = (p_i - 1)(q_i - 1) + 1$。\n`n, e, d` 是已知的，未知数只有 `p,q` \n\n暴力枚举：枚举`p`, `p` 的范围是 `1~n`, `q=n/p`\n限制条件：上述两个等式\n```cpp\ntypedef long long LL;\n...\nfor(LL p=1; p<=n; p++){\n\tLL q = n/p;\n\tif(n==p*q && e*d==(p-1)*(q-1)+1){\n\t\tcout<<p<<' '<<q<<endl;\n\t\tbreak;\n\t}\n}\n```\n> 加上 flag 控制输出 NO，可以拿到40分\n\n##### 方法二：数学优化\n$e_i \\times d_i = (p_i - 1)(q_i - 1) + 1$\n$e_i \\times d_i = n-p_i-q_i+2$\n$p_i+q_i=n-e_i \\times d_i+2$\n$p_i = n/q_i$  \n$n/q_i+q_i=n-e_i \\times d_i+2$\n$n+{q_i}^2=(n-e_i \\times d_i+2)*q_i$\n${q_i}^2-(n-e_i \\times d_i+2)*q_i+n=0$\n\n问题变成了求解一元二次方程的解：$a=1$, $b=-(n-e_i*d_i+2)$, $c=n$\n```cpp\n...\ncin>>n>>e>>d;\nLL a = 1, b= -(n-e*d+2), c=n;\nLL delta = b*b - 4*a*c;\nLL p = (-1*b + sqrt(delat))/(2*a);\nLL q = n/p;\nif(e*d ==(p-1)*(q-1)+1 && p*q==n){\n\tcout<<p<<' '<<q<<endl;\n}\nelse cout<<\"NO\"<<endl;\n```\n\n##### 二分查找\n暴力搜索超时：枚举`p` 超时\n用二分枚举 p， `p+q = n-e*d+2`, 题目又说 `p<=q` 的，所以 `p` 最大应该是 `(n-e*d+2)/2`\n```cpp\nLL l=1, r=(n-e*d+2)/2, mid;\nwhile(l<r){ // 找右区间左边界\n\tmid = (l+r)/2;\n\tif(mid*(n-e*d+2-mid)>=n){\n\t\tr=mid;\n\t}else l=mid+1;\n}\nif(l*(n-e*d+2-l)==n) cout<<l<<' '<<n-e*d+2-l<<endl;\nelse cout<<\"NO\";\n```","x":-1024,"y":1961,"width":924,"height":2119},
		{"id":"2be58ba3166361a2","x":-2080,"y":2120,"width":877,"height":463,"type":"text","text":"#### 一元二次方程求解\n对一元二次方程 $ax ^ 2 + bx + c = 0, (a \\neq 0)$，可以用以下方式求实数解：\n计算 $\\Delta = b ^ 2 - 4ac$，则:\n若 $\\Delta < 0$，则该一元二次方程无实数解。\n否则 $\\Delta \\geq 0$，此时该一元二次方程有两个实数解 $x _ {1, 2} = \\frac{-b \\pm \\sqrt \\Delta}{2a}$。\n\n例如：\n- $x ^ 2 + x + 1 = 0$ 无实数解，因为 $\\Delta = 1 ^ 2 - 4 \\times 1 \\times 1 = -3 < 0$。\n- $x ^ 2 - 2x + 1 = 0$ 有两相等实数解 $x _ {1, 2} = 1$。\n- $x ^ 2 - 3x + 2 = 0$ 有两互异实数解 $x _ 1 = 1, x _ 2 = 2$。"},
		{"id":"afcb77830e1ed7a0","type":"text","text":"  \n#### [P8813 [CSP-J 2022] 乘方](https://www.luogu.com.cn/problem/P8813)\n##### 思路\n1. $a^b$ , 特殊 $1^b$, $a^1$ \n```cpp\nif(a==1){ cout<<1; return 0; }\nelse if(b==1) {cout<<a; return 0; }\n```\n2. 乘方： 连续 b 个 a 相乘，循环模拟（不超出范围）\n```cpp\nlong long ans = 1;\nfor(int i=1; i<=b; i++){\n\tans *= a;\n}\ncout<<ans;\n```\n3. 超出范围的部分，及时停止循环，输出-1\n```cpp\nfor(....){\n\tif(ans>(int)1e9){ cout<<-1; return 0};\n\t...\n}\n```","x":-1996,"y":2700,"width":710,"height":904},
		{"id":"d1ac32886af906ae","type":"text","text":"#### [P6421 [COCI2008-2009#2] RESETO](https://www.luogu.com.cn/problem/P6421 \"[COCI2008-2009#2] RESETO\")\n注意模拟筛法时重复标记的数字只算做1次删除","x":-1100,"y":235,"width":720,"height":130},
		{"id":"59d2e0f722170567","type":"text","text":"#### [P7071 [CSP-J2020] 优秀的拆分](https://www.luogu.com.cn/problem/P7071 \"[CSP-J2020] 优秀的拆分\")\n### 思路\n\n1. 20%的数据是10以内，可以打表 `string b[]={\"\",\"-1\",\"2\",\"-1\",......}`\n2. 20%的数据是**奇数**，奇数是没有拆分的 `if(n%2==1) cout<<-1`\n3. 20%的数据，本身就是2的正整数次幂，直接输出`n` 即可\n4. 考虑偶数，根据数据范围，拆分最大的数不超过$2^{31}$, 考虑枚举算法，枚举$2^{30}$~$2^1$, 只要枚举的数比`n`小，这个数就能被拆出来\n\n```cpp\nfor(int i=30; i>=1; i--){\n    int num = 1<<i; // 位运算可以求2的幂\n    if(n>=num){\n        cout<<num<<' ';\n        n-=num;\n    }\n}\n```\n","x":-1100,"y":460,"width":742,"height":800},
		{"id":"deb75c05a2204f10","type":"text","text":"#### 质数筛法\n\n**埃拉托色尼筛法**\n\n```cpp\nvector<bool> isPrime(n + 1, true); // 标记每个数字是否被删除\n    // 从2开始进行埃拉托色尼筛法\n    for (int i = 2; i <= n; i++)\n        if (isPrime[i]) // 如果i是质数\n            for (int j = i * 2; j <= n; j += i)\n                isPrime[j] = false; // 划掉\n\n    for (int i = 2; i <= n; i++)\n        if (isPrime[i])\n            cout << i << ' ';\n```\n\n**欧拉筛法**\n```cpp\nbitset<MAXN + 1> isPrime; // 使用bitset节省空间\n    vector<int> primes;\n    isPrime.set();               // 初始化所有数为素数\n    isPrime[0] = isPrime[1] = 0; // 0和1不是素数\n    for (int i = 2; i <= n; ++i)\n    {\n        if (isPrime[i]) primes.push_back(i);\n        for (int j = 0; j < primes.size() && i * primes[j] <= n; ++j)\n        {\n            isPrime[i * primes[j]] = 0; // 标记合数\n            if (i % primes[j] == 0)\n                break; // 保证每个合数只被其最小质因数筛掉\n        }\n    }\n\n    for (int x : primes) cout << x << ' ';\n```","x":-2400,"y":100,"width":1152,"height":1200}
	],
	"edges":[
		{"id":"9a8692204cabe622","fromNode":"0b7ed08c8ba1b3ce","fromSide":"right","toNode":"21e223f0eae5e2c6","toSide":"left","color":"1","label":"完全平方数的约数个数为奇数"},
		{"id":"ce37c50ea5d23639","fromNode":"c174e9a56f86476f","fromSide":"right","toNode":"de59b4b34b16d6d1","toSide":"left","color":"1"},
		{"id":"1d48feb0840d969e","fromNode":"deb75c05a2204f10","fromSide":"right","toNode":"d1ac32886af906ae","toSide":"left","color":"1"},
		{"id":"ff27445d11b9ef46","fromNode":"21e223f0eae5e2c6","fromSide":"top","toNode":"31e645737466da4d","toSide":"bottom","color":"1"},
		{"id":"695b05dd514f7dae","fromNode":"87578c2a3ade4ce9","fromSide":"right","toNode":"1ca1bb799c4b09b6","toSide":"left","color":"1"},
		{"id":"bc10e9605336ac76","fromNode":"b8714276e53bafca","fromSide":"right","toNode":"567387d671d8a7dd","toSide":"left","color":"1"},
		{"id":"1ecbc3936c5b725d","fromNode":"73c052ad6b7d3fbb","fromSide":"right","toNode":"87578c2a3ade4ce9","toSide":"left","color":"1"},
		{"id":"77a4939496a6754d","fromNode":"73c052ad6b7d3fbb","fromSide":"right","toNode":"b08ff9fd6df13109","toSide":"left","color":"1"},
		{"id":"bfe0393b7b52751a","fromNode":"b8714276e53bafca","fromSide":"right","toNode":"77b79af9576722d4","toSide":"left","color":"1"},
		{"id":"34e9605237d15458","fromNode":"567387d671d8a7dd","fromSide":"right","toNode":"c22eaaf21c2a5990","toSide":"left","color":"1"},
		{"id":"e3bbde8a8def6ff9","fromNode":"1ca1bb799c4b09b6","fromSide":"top","toNode":"c22eaaf21c2a5990","toSide":"bottom","color":"1"},
		{"id":"1afced9f121fb975","fromNode":"c22eaaf21c2a5990","fromSide":"right","toNode":"6df8fcbedae8891d","toSide":"top","color":"1"},
		{"id":"d239361e4f59e82d","fromNode":"77b79af9576722d4","fromSide":"right","toNode":"5ed1915c0fc4bbab","toSide":"left","color":"1"},
		{"id":"cc59bba279bbac04","fromNode":"2be58ba3166361a2","fromSide":"right","toNode":"261d55e19e7bbd7f","toSide":"left","color":"1"}
	]
}